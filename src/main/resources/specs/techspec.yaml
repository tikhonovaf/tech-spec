openapi: "3.0.2"
info:
  title: "techspec demo backend"
  version: "1.00"
servers:
  - url: http://localhost:8085/api
paths:

  /subsriptions/users/{id}:
    get:
      summary: Выборка пользователя
      operationId: getUser
      tags:
        - SUBSRIPTIONS
      parameters:
        - name: id
          description: ИД пользователя
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Пользователь
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userDto"

    patch:
      summary: Изменение пользователя
      operationId: modifyUser
      tags:
        - SUBSRIPTIONS
      parameters:
        - name: id
          description: ИД пользователя
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userInDto"
      responses:
        200:
          description: Пустой ответ

    delete:
      summary: Удаление пользователя
      operationId: deleteUser
      tags:
        - SUBSRIPTIONS
      parameters:
        - name: id
          description: ИД пользователя
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Пустой ответ

  /subsriptions/users:
    post:
      summary: Добавление пользователя
      operationId: addUser
      tags:
        - SUBSRIPTIONS
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userInDto"
      responses:
        200:
          description: Пустой ответ

  /subsriptions/users/search:
    get:
      summary: Выборка списка пользователей
      operationId: searchUsers
      tags:
        - SUBSRIPTIONS
      responses:
        200:
          description: Список пользователей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userDtos"


  /services/info/{requestType}:
    get:
      summary: Выборка списка сервисов
      operationId: getSubscriptions
      tags:
        - SERVICES
      parameters:
        - name: requestType
          description: Тип запроса (C - customer, M - moderator, S - support)
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Список сервисов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/serviceViewDtos"

  /services:
    post:
      summary: Добавление сервиса
      operationId: addSubscriptions
      tags:
        - SERVICES
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceInDto"
      responses:
        200:
          description: Пустой ответ

  /services/{serviceId}:
    patch:
      summary: Изменение сервиса
      operationId: modifySubscriptions
      tags:
        - SERVICES
      parameters:
        - name: serviceId
          description: ИД сервиса
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serviceInDto"
      responses:
        200:
          description: Пустое значение
    get:
      summary: Выборка сервиса
      operationId: getSubscriptions
      tags:
        - SERVICES
      parameters:
        - name: serviceId
          description: ИД элемента справочника
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Данные по элементу справочника
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/serviceViewDto"
    delete:
      summary: Удаление сервиса
      operationId: deleteSubscriptions
      tags:
        - SERVICES
      parameters:
        - name: serviceId
          description: ИД элемента справочника
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Пустой ответ

  /services/confirmation/{serviceId}:
    patch:
      summary: Подтверждение сервиса
      operationId: confirmationSubscriptions
      tags:
        - SERVICES
      parameters:
        - name: serviceId
          description: ИД сервиса
          in: path
          required: true
          schema:
            type: integer
            format: int64
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/serviceInDto"
      responses:
        200:
          description: Пустое значение

  /services/image/upload/{serviceId}:
    post:
      tags:
        - SERVICES
      operationId: uploadImage
      summary: Загрузка файла
      parameters:
        - name: serviceId
          description: ИД сервиса
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: Пустой ответ
  /services/image/download/{serviceId}:
    get:
      tags:
        - SERVICES
      summary: Выгрузка в файл
      operationId: downloadImageBySubscriptionsId
      parameters:
        - name: serviceId
          description: ИД сервиса
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Файл
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /ref/bannerTypes:
    get:
      summary: Выборка списка типов баннеров
      operationId: getBannerTypes
      tags:
        - REF
      responses:
        200:
          description: Список типов баннеров
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bannerTypesViewDtos"
    post:
      summary: Добавление типа баннера
      operationId: addBannerType
      tags:
        - REF
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bannerTypeInDto"
      responses:
        200:
          description: Пустой ответ

  /ref/bannerTypes/{bannerTypeId}:
    patch:
      summary: Изменение типа баннера
      operationId: modifyBannerType
      tags:
        - REF
      parameters:
        - name: bannerTypeId
          description: ИД
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bannerTypeInDto"
      responses:
        200:
          description: Пустое значение
    get:
      summary: Выборка типа баннера
      operationId: getBannerType
      tags:
        - REF
      parameters:
        - name: bannerTypeId
          description: ИД элемента справочника
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Данные по элементу справочника
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bannerTypesViewDto"
    delete:
      summary: Удаление типа баннера
      operationId: deleteBannerType
      tags:
        - REF
      parameters:
        - name: bannerTypeId
          description: ИД элемента справочника
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Пустой ответ

  /ref/exchangeRates:
    get:
      summary: Выборка списка курсов валют
      operationId: getExchangeRates
      tags:
        - REF
      responses:
        200:
          description: Список курсов валют
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/exchangeRatesDtos"


components:
  schemas:

    serviceViewDtos:
      type: array
      description: Список сервисов
      items:
        $ref: "#/components/schemas/serviceViewDto"
    serviceViewDto:
      type: object
      description: Сервис
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор сервиса
          example: 1
        name:
          type: string
          description: Наименование сервиса
          example: Наименование сервиса 1
        oldName:
          type: string
          description: Старое наименование сервиса
          example: Старое наименование сервиса 1
        description:
          type: string
          description: Описание сервиса
          example: Описание сервиса 1
        catFormatId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        catFormatName:
          type: string
          description: Наименование
          example: Наименование  1
        catGoalId:
          type: string
          description: Наименование
          example: Наименование  1
        catGoalName:
          type: string
          description: Наименование
          example: Наименование  1
        catPlaceId:
          type: string
          description: Наименование
          example: Наименование  1
        catPlaceName:
          type: string
          description: Наименование
          example: Наименование  1
        catTechnologyId:
          type: string
          description: Наименование
          example: Наименование  1
        catTechnologyName:
          type: string
          description: Наименование
          example: Наименование  1
        confirmed:
          type: boolean
          description: Подтверждение
          example: true
        moderated:
          type: string
          description: Модерация
          example: true
        price:
          type: integer
          format: int32
          description: Цена
          example: 1200

    serviceInDto:
      type: object
      description: Сервис
      properties:
        name:
          type: string
          description: Наименование сервиса
          example: Наименование сервиса 1
        oldName:
          type: string
          description: Старое наименование сервиса
          example: Старое наименование сервиса 1
        description:
          type: string
          description: Описание сервиса
          example: Описание сервиса 1
        catFormatId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        catGoalId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        catPlaceId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        catTechnologyId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
#        confirmed:
#          type: boolean
#          description: Подтверждение
#          example: true
#        moderated:
#          type: string
#          description: Модерация
#          example: true
        price:
          type: integer
          format: int32
          description: Цена
          example: 1200

    loginDto:
      type: object
      description: Данные для входа в систему
      properties:
        username:
          type: string
          description: Имя пользователя
          example: SUBSRIPTIONS
        password:
          type: string
          description: Наименование
          example: SUBSRIPTIONS

    bannerCategoryDtos:
      type: array
      description: Список категорий
      items:
        $ref: "#/components/schemas/bannerCategoryDto"
    bannerCategoryDto:
      type: object
      description: Категория
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор категории
          example: 1
        name:
          type: string
          description: Наименование категории
          example: Наименование категории 1

    bannerTypesViewDtos:
      type: array
      description: Список типов баннеров
      items:
        $ref: "#/components/schemas/bannerTypesViewDto"
    bannerTypesViewDto:
      type: object
      description: Тип баннера
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        name:
          type: string
          description: Наименование
          example: Наименование  1
        catergoryId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        catergoryName:
          type: string
          description: Наименование
          example: Наименование  1

    bannerTypeInDto:
      type: object
      description: Сервис
      properties:
        name:
          type: string
          description: Наименование
          example: Наименование  1
        catergoryId:
          type: integer
          format: int64
          description: Идентификатор
          example: 1

    exchangeRatesDtos:
      type: array
      description: Список курсов валют
      items:
        $ref: "#/components/schemas/exchangeRatesDto"
    exchangeRatesDto:
      type: object
      description: Курс валюты
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор
          example: 1
        numCode:
          type: string
          description: Наименование
          example: Наименование  1
        charCode:
          type: string
          description: Наименование
          example: Наименование  1
        name:
          type: string
          description: Наименование
          example: Наименование  1
        value:
          type: number
          description: Значение
          example: 1

    userDtos:
      type: array
      description: Список пользователей
      items:
        $ref: "#/components/schemas/userDtos"
    userDto:
      type: object
      description: Пользователь
      properties:
        id:
          type: integer
          format: int64
          description: Идентификатор записи
          example: 1
        firstName:
          type: string
          description: Имя
          example: Петр
        lastName:
          type: string
          description: Фамилия
          example: Петров
        secondName:
          type: string
          description: Отчество
          example: Петрович
        email:
          type: string
          description: email
          example: email
        phone:
          type: string
          description: phone
          example: +7(916)234-67-89
        telegram:
          type: string
          description: ACCESS_KEY
          example: test

    userInDto:
      type: object
      description: Данные о пользователе
      properties:
        firstName:
          type: string
          description: Имя
          example: Петр
        lastName:
          type: string
          description: Фамилия
          example: Петров
        secondName:
          type: string
          description: Отчество
          example: Петрович
        email:
          type: string
          description: email
          example: email
        phone:
          type: string
          description: phone
          example: +7(916)234-67-89
        telegram:
          type: string
          description: ACCESS_KEY
          example: test
